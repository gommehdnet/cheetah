--- a/net/minecraft/world/entity/player/Player.java
+++ b/net/minecraft/world/entity/player/Player.java
@@ -150,12 +_,12 @@
         )
         .put(Pose.DYING, EntityDimensions.fixed(0.2F, 0.2F).withEyeHeight(1.62F))
         .build();
-    private static final EntityDataAccessor<Float> DATA_PLAYER_ABSORPTION_ID = SynchedEntityData.defineId(Player.class, EntityDataSerializers.FLOAT);
-    private static final EntityDataAccessor<Integer> DATA_SCORE_ID = SynchedEntityData.defineId(Player.class, EntityDataSerializers.INT);
+    public static final EntityDataAccessor<Float> DATA_PLAYER_ABSORPTION_ID = SynchedEntityData.defineId(Player.class, EntityDataSerializers.FLOAT);
+    public static final EntityDataAccessor<Integer> DATA_SCORE_ID = SynchedEntityData.defineId(Player.class, EntityDataSerializers.INT);
     public static final EntityDataAccessor<Byte> DATA_PLAYER_MODE_CUSTOMISATION = SynchedEntityData.defineId(Player.class, EntityDataSerializers.BYTE);
-    protected static final EntityDataAccessor<Byte> DATA_PLAYER_MAIN_HAND = SynchedEntityData.defineId(Player.class, EntityDataSerializers.BYTE);
-    protected static final EntityDataAccessor<CompoundTag> DATA_SHOULDER_LEFT = SynchedEntityData.defineId(Player.class, EntityDataSerializers.COMPOUND_TAG);
-    protected static final EntityDataAccessor<CompoundTag> DATA_SHOULDER_RIGHT = SynchedEntityData.defineId(Player.class, EntityDataSerializers.COMPOUND_TAG);
+    public static final EntityDataAccessor<Byte> DATA_PLAYER_MAIN_HAND = SynchedEntityData.defineId(Player.class, EntityDataSerializers.BYTE);
+    public static final EntityDataAccessor<CompoundTag> DATA_SHOULDER_LEFT = SynchedEntityData.defineId(Player.class, EntityDataSerializers.COMPOUND_TAG);
+    public static final EntityDataAccessor<CompoundTag> DATA_SHOULDER_RIGHT = SynchedEntityData.defineId(Player.class, EntityDataSerializers.COMPOUND_TAG);
     public static final int CLIENT_LOADED_TIMEOUT_TIME = 60;
     private long timeEntitySatOnShoulder;
     final Inventory inventory = new Inventory(this);
@@ -1013,7 +_,18 @@
                     }
 
                     this.useItem = ItemStack.EMPTY;
-                    this.playSound(SoundEvents.SHIELD_BREAK, 0.8F, 0.8F + this.level().random.nextFloat() * 0.4F);
+
+                    // Cheetah start - Suppress shield break sound if it was cancelled in the PlayerShieldDisableEvent
+                    final io.papermc.paper.event.player.PlayerShieldDisableEvent shieldDisableEvent = new io.papermc.paper.event.player.PlayerShieldDisableEvent(
+                        (org.bukkit.entity.Player) getBukkitEntity(),
+                        null,
+                        100
+                    );
+
+                    if (!shieldDisableEvent.isSoundCancelled()) {
+                        this.playSound(SoundEvents.SHIELD_BREAK, 0.8F, 0.8F + this.level().random.nextFloat() * 0.4F);
+                    }
+                    // Cheetah end - Suppress shield break sound if it was cancelled in the PlayerShieldDisableEvent
                 }
             }
         }
@@ -1470,7 +_,12 @@
         }
         // Paper end - Add PlayerShieldDisableEvent
         this.stopUsingItem();
-        this.level().broadcastEntityEvent(this, (byte)30);
+
+        // Cheetah start - Suppress shield break sound if it was cancelled in the PlayerShieldDisableEvent
+        if (!shieldDisableEvent.isSoundCancelled()) {
+            this.level().broadcastEntityEvent(this, (byte)30);
+        }
+        // Cheetah end - Suppress shield break sound if it was cancelled in the PlayerShieldDisableEvent
     }
 
     public void crit(Entity entityHit) {
