--- a/net/minecraft/world/level/block/entity/HopperBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/HopperBlockEntity.java
@@ -36,6 +_,7 @@
     public int cooldownTime = -1;
     private long tickedGameTime;
     private Direction facing;
+    private float hopperTransferMultiplier = 1.0F; // Cheetah - Configurable hopper transfer multiplier
 
     // CraftBukkit start - add fields and methods
     public List<org.bukkit.entity.HumanEntity> transaction = new java.util.ArrayList<>();
@@ -67,6 +_,15 @@
     }
     // CraftBukkit end
 
+    // Cheetah start - Configurable hopper transfer multiplier
+    public float getHopperTransferMultiplier() {
+        return this.hopperTransferMultiplier;
+    }
+
+    public void setHopperTransferMultiplier(float hopperTransferMultiplier) {
+        this.hopperTransferMultiplier = hopperTransferMultiplier;
+    }
+    // Cheetah end
 
     public HopperBlockEntity(BlockPos pos, BlockState blockState) {
         super(BlockEntityType.HOPPER, pos, blockState);
@@ -82,6 +_,11 @@
         }
 
         this.cooldownTime = tag.getInt("TransferCooldown");
+        // Cheetah start - Configurable hopper transfer multiplier
+        if (tag.contains("TransferMultiplier")) {
+            this.hopperTransferMultiplier = tag.getFloat("TransferMultiplier");
+        }
+        // Cheetah end
     }
 
     @Override
@@ -92,6 +_,11 @@
         }
 
         tag.putInt("TransferCooldown", this.cooldownTime);
+        // Cheetah start - Configurable hopper transfer multiplier
+        if (this.hopperTransferMultiplier != 1.0F) {
+            tag.putFloat("TransferMultiplier", this.hopperTransferMultiplier);
+        }
+        // Cheetah end
     }
 
     @Override
@@ -228,7 +_,7 @@
                 ItemStack movedItem = origItemStack;
 
                 final int originalItemCount = origItemStack.getCount();
-                final int movedItemCount = Math.min(level.spigotConfig.hopperAmount, originalItemCount);
+                final int movedItemCount = Math.min((int) (level.spigotConfig.hopperAmount * hopper.hopperTransferMultiplier), originalItemCount); // Cheetah - Configurable hopper transfer multiplier
                 origItemStack.setCount(movedItemCount);
 
                 // We only need to fire the event once to give protection plugins a chance to cancel this event
@@ -265,7 +_,7 @@
     private static boolean hopperPull(final Level level, final Hopper hopper, final Container container, ItemStack origItemStack, final int i) {
         ItemStack movedItem = origItemStack;
         final int originalItemCount = origItemStack.getCount();
-        final int movedItemCount = Math.min(level.spigotConfig.hopperAmount, originalItemCount);
+        final int movedItemCount = Math.min((int) (level.spigotConfig.hopperAmount * hopper.getHopperTransferMultiplier()), originalItemCount); // Cheetah - Configurable hopper transfer multiplier
         container.setChanged(); // original logic always marks source inv as changed even if no move happens.
         movedItem.setCount(movedItemCount);
 
