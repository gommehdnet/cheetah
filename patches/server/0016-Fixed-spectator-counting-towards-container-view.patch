From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: TehManu <tehmanu.developer@gmail.com>
Date: Thu, 23 May 2024 23:04:36 +0200
Subject: [PATCH] Fixed spectator counting towards container view


diff --git a/src/main/java/net/minecraft/world/level/block/entity/ContainerOpenersCounter.java b/src/main/java/net/minecraft/world/level/block/entity/ContainerOpenersCounter.java
index 86dce6796f92a5b0ae2b1bd837267c4e3f6754d0..8344f35ebc0dc4cb92e46dd2d54c54a928809346 100644
--- a/src/main/java/net/minecraft/world/level/block/entity/ContainerOpenersCounter.java
+++ b/src/main/java/net/minecraft/world/level/block/entity/ContainerOpenersCounter.java
@@ -43,6 +43,12 @@ public abstract class ContainerOpenersCounter {
 
     protected abstract boolean isOwnContainer(Player player);
 
+    // Cheetah start - [MC-232968] Fixed spectator counting towards container view
+    private boolean isValidContainerViewer(Player player) {
+        return !player.isSpectator() && isOwnContainer(player);
+    }
+    // Cheetah end
+
     public void incrementOpeners(Player player, Level world, BlockPos pos, BlockState state) {
         int oldPower = Math.max(0, Math.min(15, this.openCount)); // CraftBukkit - Get power before new viewer is added
         int i = this.openCount++;
@@ -95,7 +101,7 @@ public abstract class ContainerOpenersCounter {
         double d0 = this.maxInteractionRange + 4.0D;
         AABB axisalignedbb = (new AABB(pos)).inflate(d0);
 
-        return world.getEntities(EntityTypeTest.forClass(Player.class), axisalignedbb, this::isOwnContainer);
+        return world.getEntities(EntityTypeTest.forClass(Player.class), axisalignedbb, this::isValidContainerViewer); // Cheetah - [MC-232968] Fixed spectator counting towards container view
     }
 
     public void recheckOpeners(Level world, BlockPos pos, BlockState state) {
