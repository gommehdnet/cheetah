From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: lukas81298 <lukas81298@gommehd.net>
Date: Thu, 27 Apr 2023 17:06:53 +0200
Subject: [PATCH] do not break message chain if proxy cancels a chat message


diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 66049d76ee156ffa34649dd50aaae67ecfd7c164..7f9d7d9c94cd4f8bc51780e37890ca3456b1ffce 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -2141,6 +2141,14 @@ public class ServerGamePacketListenerImpl extends ServerCommonPacketListenerImpl
         if (this.server.isStopped()) {
             return;
         }
+        // Cheetah start - Do not break message chain if proxy cancels a chat message
+        boolean cancelled = packet.lastSeenMessages().offset() < 0; // Canceling the signed chat packet on bungeecord side will break the chat chain on spigot side. Thus, the server will no longer be able to validate subsequent chat messages.
+                                                                    // We implement a little hack here: If the offset in the lastSeenMessages field is negative, the message will be correctly validated and the chat chain will be updated
+                                                                    // but the server will ignore the chat message, i.e. no events are called, it is not logged, and no player will see the message
+        if (cancelled)  {
+            packet = new ServerboundChatPacket(packet.message(), packet.timeStamp(), packet.salt(), packet.signature(), new LastSeenMessages.Update(packet.lastSeenMessages().offset() == Integer.MIN_VALUE ? 0 : -packet.lastSeenMessages().offset(), packet.lastSeenMessages().acknowledged())); // Restore the correct offset (copy packet here, packet itself is immutable record)
+        }
+        // Cheetah end
         // CraftBukkit end
         if (ServerGamePacketListenerImpl.isChatMessageIllegal(packet.message())) {
             this.disconnect(Component.translatable("multiplayer.disconnect.illegal_characters"), org.bukkit.event.player.PlayerKickEvent.Cause.ILLEGAL_CHARACTERS); // Paper - add cause
@@ -2158,6 +2166,12 @@ public class ServerGamePacketListenerImpl extends ServerCommonPacketListenerImpl
                         return;
                     }
 
+                    // Cheetah start - Do not break message chain if proxy cancels a chat message
+                    if (cancelled) {
+                        LOGGER.info("Skipping message of " + player.getScoreboardName() + ": '" + playerchatmessage.signedContent() + " because it was cancelled by BungeeCord.");
+                        return;
+                    }
+                    // Cheetah end
                     CompletableFuture<FilteredText> completablefuture = this.filterTextPacket(playerchatmessage.signedContent()).thenApplyAsync(Function.identity(), this.server.chatExecutor); // CraftBukkit - async chat
                     CompletableFuture<ChatDecorator.Result> componentFuture = this.server.getChatDecorator().decorate(this.player, null, playerchatmessage.decoratedContent()); // Paper
 
@@ -2177,9 +2191,24 @@ public class ServerGamePacketListenerImpl extends ServerCommonPacketListenerImpl
         if (ServerGamePacketListenerImpl.isChatMessageIllegal(packet.command())) {
             this.disconnect(Component.translatable("multiplayer.disconnect.illegal_characters"), org.bukkit.event.player.PlayerKickEvent.Cause.ILLEGAL_CHARACTERS); // Paper
         } else {
+            // Cheetah start - Do not break message chain if proxy cancels a chat message
+            boolean cancelled = packet.lastSeenMessages().offset() < 0; // Same behavior as for ServerboundChatPacket
+            ServerboundChatCommandPacket packet1;
+            if(cancelled) {
+                packet1 = new ServerboundChatCommandPacket(packet.command(), packet.timeStamp(), packet.salt(), packet.argumentSignatures(), new LastSeenMessages.Update(packet.lastSeenMessages().offset() == Integer.MIN_VALUE ? 0 : -packet.lastSeenMessages().offset(), packet.lastSeenMessages().acknowledged())); // Restore the correct offset (copy packet here, packet itself is immutable record)
+            } else {
+                packet1 = packet;
+            }
+            // Cheetah end
             Optional<LastSeenMessages> optional = this.tryHandleChat(packet.lastSeenMessages());
 
             if (optional.isPresent()) {
+                // Cheetah start - Do not break message chain if proxy cancels a chat message
+                if (cancelled) {
+                    LOGGER.info("Skipping command of " + player.getScoreboardName() + ": '" + packet1.command() + " because it was cancelled by BungeeCord.");
+                    return;
+                }
+                // Cheetah end
                 this.server.submit(() -> {
                     // CraftBukkit start - SPIGOT-7346: Prevent disconnected players from executing commands
                     if (this.player.hasDisconnected()) {
