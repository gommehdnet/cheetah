From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: deroq <deroq1337@gmail.com>
Date: Fri, 30 May 2025 13:14:52 +0200
Subject: [PATCH] refactor(paper-api/PlayerShieldDisableEvent): allow nullable
 damager


diff --git a/src/main/java/io/papermc/paper/event/player/PlayerShieldDisableEvent.java b/src/main/java/io/papermc/paper/event/player/PlayerShieldDisableEvent.java
index 80493e0b96439d25b877ad41aeb8c27a4108dc71..fad9ce24f7dcef3f6d9c2bb9449d78f8582026b5 100644
--- a/src/main/java/io/papermc/paper/event/player/PlayerShieldDisableEvent.java
+++ b/src/main/java/io/papermc/paper/event/player/PlayerShieldDisableEvent.java
@@ -24,27 +24,35 @@ import java.util.Optional;
 public class PlayerShieldDisableEvent extends PlayerEvent implements Cancellable {
     private static final HandlerList HANDLER_LIST = new HandlerList();
 
-    private final Entity damager;
+    private final @Nullable Entity damager; // Cheetah - Allow nullable damager
     private int cooldown;
 
     private boolean cancelled;
     private boolean soundCancelled; // Cheetah - Add sound cancelled flag to PlayerShieldDisableEvent
 
     @ApiStatus.Internal
-    public PlayerShieldDisableEvent(final Player player, final Entity damager, final int cooldown) {
+    public PlayerShieldDisableEvent(@NotNull final Player player, @Nullable final Entity damager, final int cooldown) {
         super(player);
         this.damager = damager;
         this.cooldown = cooldown;
     }
 
+    // Cheetah start - Allow nullable damager
+
     /**
-     * Provides the damager that disabled the shield.
+     * Returns the entity that caused the shield to be disabled, if available.
+     * <p>
+     * In previous versions, this method returned a non-null {@link Entity} reference when the shield was disabled. Now,
+     * it returns an {@link Optional}, which may be empty if no damager was recorded. This change improves null-safety
+     * and allows better control flow when checking the presence of a damager.
      *
-     * @return the entity instance that damaged the player in a way that caused the shield to be disabled.
+     * @return an {@link Optional} containing the entity that disabled the shield, or an empty {@code Optional} if none
+     * was recorded
      */
-    public Entity getDamager() {
-        return this.damager;
+    public Optional<Entity> getDamager() {
+        return Optional.ofNullable(damager);
     }
+    // Cheetah end - Allow nullable damager
 
     /**
      * Gets the cooldown the disabled shield will be disabled for in ticks.
